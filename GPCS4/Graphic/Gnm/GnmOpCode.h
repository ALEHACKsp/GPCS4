#pragma once

#include "GPCS4Common.h"

// OpCode format:
//
// flags | length-2  |   type   |   sub
// 31 30 | 29 ... 16 | 15 ... 8 | 7 ... 0


#define OPCODE_BUILD(numDwords, type, sub) ( ((uint32_t)( ((((uint16_t)numDwords) << 16) + 0x3FFE0000) | 0xC0001000)) | ((uint8_t)(type)) << 8 | ((uint8_t)(sub)))
#define OPCODE_TYPE(code) (((uint32_t)(code) & 0x0000FF00) >> 8)
#define OPCODE_SUB(code) (((uint32_t)(code) & 0x000000FF))
#define OPCODE_LENGTH(code) ((((uint32_t)(code) & 0x3FFF0000) >> 16) + 2)

#define IS_OPCODE(code) ((uint32_t)(code) & 0xC0000000)
#define IS_NOP_OPCODE(code) ((uint32_t)(code) == 0x80000000)

//////////////////////////////////////////////////////////////////////////
// used by both draw and dispatch command

enum OpTypePrivate : uint8_t
{
	OP_TYPE_PRIV_SHARED = 0xFF,
	OP_TYPE_PRIV_DRAW = 0xFE,
	OP_TYPE_PRIV_DISPATCH = 0xFD,
};

enum OpSubPrivateShared : uint8_t
{
	OP_SUB_PUSH_MARKER = 0x00,
	OP_SUB_PUSH_COLOR_MARKER = 0x01,
	OP_SUB_POP_MARKER = 0x02,
	OP_SUB_SET_MARKER = 0x03,
	OP_SUB_SET_CS_SHADER = 0x04,
	OP_SUB_DISPATCH_DIRECT = 0x05,
	OP_SUB_DISPATCH_INDIRECT = 0x06,
};

//////////////////////////////////////////////////////////////////////////
// self defined
// used for OPCODE_BUILD
enum OpSubPrivateDraw : uint8_t
{
	OP_SUB_DRAW_INITIALIZE_DEFAULT_HARDWARE_STATE = 0x00,
	OP_SUB_DRAW_INITIALIZE_TO_DEFAULT_CONTEXT_STATE = 0x01,

	OP_SUB_SET_EMBEDDED_VS_SHADER = 0x02,
	OP_SUB_SET_EMBEDDED_PS_SHADER = 0x03,

	OP_SUB_SET_VS_SHADER = 0x04,
	OP_SUB_SET_PS_SHADER = 0x05,
	OP_SUB_SET_ES_SHADER = 0x06,
	OP_SUB_SET_GS_SHADER = 0x07,
	OP_SUB_SET_HS_SHADER = 0x08,
	OP_SUB_SET_LS_SHADER = 0x09,
	OP_SUB_UPDATE_GS_SHADER = 0x0A,
	OP_SUB_UPDATE_HS_SHADER = 0x0B,
	OP_SUB_UPDATE_PS_SHADER = 0x0C,
	OP_SUB_UPDATE_VS_SHADER = 0x0D,

	OP_SUB_SET_VGT_CONTROL = 0x0E,
	OP_SUB_RESET_VGT_CONTROL = 0x0F,

	OP_SUB_DRAW_INDEX = 0x10,
	OP_SUB_DRAW_INDEX_AUTO = 0x11,
	OP_SUB_DRAW_INDEX_INDIRECT = 0x12,
	OP_SUB_DRAW_INDEX_INDIRECT_COUNT_MULTI = 0x13,
	OP_SUB_DRAW_INDEX_MULTI_INSTANCED = 0x14,
	OP_SUB_DRAW_INDEX_OFFSET = 0x15,
	OP_SUB_DRAW_INDIRECT = 0x16,
	OP_SUB_DRAW_INDIRECT_COUNT_MULTI = 0x17,
	OP_SUB_DRAW_OPAQUE_AUTO = 0x18,

	OP_SUB_WAIT_UNTIL_SAFE_FOR_RENDERING = 0x19,
};


enum OpTypeDraw : uint8_t
{
	OP_TYPE_BASE = 0x10,
	OP_TYPE_BASE_INDIRECT_ARGS = 0x11,
	OP_TYPE_INDEX_COUNT = 0x13,
	OP_TYPE_Z_PASS_PREDICATION = 0x20,
	OP_TYPE_PREDICATION = 0x22,
	OP_TYPE_INDEX_BUFFER = 0x26,
	OP_TYPE_INDEX_SIZE = 0x2A,
	OP_TYPE_NUM_INSTANCES = 0x2F,
	OP_TYPE_WRITE_STREAMOUT_BUFFER = 0x34,
	OP_TYPE_WRITE_DATA_INLINE = 0x37,
	OP_TYPE_SEMAPHORE = 0x39,
	OP_TYPE_WAIT_ON = 0x3C,
	OP_TYPE_CHAIN_COMMAND_BUFFER = 0x3F,
	OP_TYPE_STALL_COMMAND_BUFFER_PARSER = 0x42,
	OP_TYPE_EVENT = 0x46,
	OP_TYPE_END_OF_PIPE = 0x47,
	OP_TYPE_END_OF_SHADER = 0x48,
	OP_TYPE_GPU_FACILITY = 0x50,
	OP_TYPE_WAIT_FOR_GRAPHICS_WRITES = 0x58,
	OP_TYPE_PAUSE = 0x59,
	OP_TYPE_CONFIG_REGISTER = 0x68,
	OP_TYPE_SET_1 = 0x69,
	OP_TYPE_SET_2 = 0x76,
	OP_TYPE_SET_3 = 0x79,
	OP_TYPE_INCREMENT_DE_COUNTER = 0x85,
	OP_TYPE_WAIT_ON_CE = 0x86,
	OP_TYPE_WAIT_FOR_SETUP_DISPATCH_DRAW_KICK_RING_BUFFER = 0x8C,
	OP_TYPE_DISPATCH_DRAW = 0x8D,
	OP_TYPE_REQUEST_MIP_STATS_REPORT_AND_RESET = 0x8E,
};



enum OpCodeDraw : uint32_t
{
	OP_CODE_BASE = 0xC0001000,
	OP_CODE_CHAIN_COMMAND_BUFFER = 0xC0023F00,
	OP_CODE_GS_MODE = 0xC0016900,
	OP_CODE_ORDERED_APPEND_ALLOCATION_COUNTER = 0xC0037900,
	OP_CODE_DISPATCH_DRAW = 0xC0028D00,
	OP_CODE_WRITE_GPU = 0xC0055000,
	OP_CODE_FLUSH_SHADER_CACHES_AND_WAIT = 0xC0055800,
	OP_CODE_FLUSH_SHADER_CACHES_AND_WAIT_DBCACHE = 0xC0004600,
	OP_CODE_FLUSH_STREAMOUT_0 = 0xC0004600,
	OP_CODE_FLUSH_STREAMOUT_1 = 0xC0055800,
	OP_CODE_FLUSH_STREAMOUT_2 = 0xC0017900,
	OP_CODE_FLUSH_STREAMOUT_3 = 0xC0053C00,
	OP_CODE_INCREMENT_DE_COUNTER = 0xC0008500,
	OP_CODE_PAUSE = 0xC0005900,
	OP_CODE_PREPARE_FLIP = 0xC03E1000,
	OP_CODE_READ_PERF_COUNTER_EG01 = 0xC0055000,
	OP_CODE_READ_PERF_COUNTER_EG23 = 0xC0091000,
	OP_CODE_READ_DATA_FROM_GDS_CS = 0xC0034802,
	OP_CODE_READ_DATA_FROM_GDS_PS = 0xC0034800,
	OP_CODE_REQUEST_MIP_STATS_REPORT_AND_RESET = 0xC0028E00,
	OP_CODE_SELECT_PERF_COUNTER_SLOT01 = 0xC0017900,
	OP_CODE_SELECT_PERF_COUNTER_SLOT23 = 0xC0051000,
	OP_CODE_SET = 0xC0016900,
	OP_CODE_SET_2 = 0xC0026900,
	OP_CODE_SET_3 = 0xC0036900,
	OP_CODE_SET_4 = 0xC0046900,
	OP_CODE_SET_AA_SAMPLE_LOCATION_CONTROL = 0xC0106900,
	OP_CODE_SET_BASE_INDIRECT_ARGS_GRAPHICS = 0xC0021100,
	OP_CODE_SET_BASE_INDIRECT_ARGS_COMPUTE = 0xC0021102,
	OP_CODE_SET_BLEND_COLOR = 0xC0046900,
	OP_CODE_SET_COMPUTE = 0xC0017602,
	OP_CODE_SET_CONFIG_REGISTER = 0xC0016800,
	OP_CODE_SET_CONFIG_REGISTER_RANGE = 0xC0006800, // note: not real value
	OP_CODE_SET_DEPTH_RENDER_TARGET = 0xC0086900,
	OP_CODE_SET_GRAPHICS_SHADER_CONTROL = 0xC0017600,
	OP_CODE_SET_INDEX_BUFFER = 0xC0012600,
	OP_CODE_SET_INDEX_COUNT = 0xC0001300,
	OP_CODE_SET_INDEX_SIZE = 0xC0002A00,
	OP_CODE_SET_NUM_INSTANCES = 0xC0002F00,
	OP_CODE_SET_OBJECT_ID = 0xC0017900,
	OP_CODE_SET_PERF_COUNTER_CONTROL_PA = 0xC0017900,
	OP_CODE_SET_PERF_COUNTER_CONTROL_PN = 0xC0011000,
	OP_CODE_SET_PERSISTENT_REGISTER_GRAPHICS = 0xC0017600,
	OP_CODE_SET_PERSISTENT_REGISTER_COMPUTE = 0xC0017602,
	OP_CODE_SET_POINTER_IN_USER_DATA_GRAPHICS = 0xC0027600,
	OP_CODE_SET_POINTER_IN_USER_DATA_COMPUTE = 0xC0027602,
	OP_CODE_SET_PREDICATION = 0xC0032200,
	OP_CODE_SET_PRIMITIVE_TYPE = 0xC0017900,
	OP_CODE_SET_RENDER_TARGET = 0xC00E6900,
	OP_CODE_SET_TEXTURE_GRADIENT_FACTORS = 0xC0017900,
	OP_CODE_SET_USER_CONFIG_REGISTER = 0xC0017900,
	OP_CODE_SET_USER_CONFIG_REGISTER_RANGE = 0xC0007900,  // not real value
	OP_CODE_SET_USER_CONFIG_REGISTER_WITH_INDEX = 0xC0017900,
	OP_CODE_SET_USER_DATA_CS = 0xC0017602,
	OP_CODE_SET_USER_DATA_NOT_CS = 0xC0017600,
	OP_CODE_SET_USER_DATA_REGION = 0xC0007600,
	OP_CODE_SET_Z_PASS_PREDICATION = 0xC0012000,
	OP_CODE_SIGNAL_SEMAPHORE = 0xC0013900,
	OP_CODE_STALL_COMMAND_BUFFER_PARSER = 0xC0004200,
	OP_CODE_TRIGGER_END_OF_PIPE_INTERRUPT = 0xC0044700,
	OP_CODE_TRIGGER_EVENT = 0xC0004600,
	OP_CODE_WAIT_FOR_GRAPHICS_WRITES = 0xC0055800,
	OP_CODE_WAIT_FOR_SETUP_DISPATCH_DRAW_KICK_RING_BUFFER_PRED_ENABLE = 0xC0048C01,
	OP_CODE_WAIT_FOR_SETUP_DISPATCH_DRAW_KICK_RING_BUFFER_PRED_DISABLE = 0xC0048C00,
	OP_CODE_WAIT_ON_ADDRESS = 0xC0053C00,
	OP_CODE_WAIT_ON_ADDRESS_AND_STALL_COMMAND_BUFFER_PARSER = 0xC0053C00,
	OP_CODE_WAIT_ON_CE = 0xC0008600,
	OP_CODE_WAIT_ON_REGISTER = 0xC0053C00,
	OP_CODE_WAIT_SEMAPHORE = 0xC0013900,
	OP_CODE_WRITE_AT_END_OF_PIPE = 0xC0044700,
	OP_CODE_WRITE_AT_END_OF_PIPE_WITH_INTERRUPT = 0xC0044700,
	OP_CODE_WRITE_AT_END_OF_SHADER_CS = 0xC0034802,
	OP_CODE_WRITE_AT_END_OF_SHADER_PS = 0xC0034800,
	OP_CODE_WRITE_DATA_INLINE = 0xC0003700,  // not real value
	OP_CODE_WRITE_DATA_INLINE_THROUGH_L2 = 0xC0003700,  // not real value
	OP_CODE_WRITE_EVENT_STATS = 0xC0024600,
	OP_CODE_WRITE_OCCLUSION_QUERY = 0xC0055000,
	OP_CODE_WRITE_STREAMOUT_BUFFER_OFFSET = 0xC0043400,
	OP_CODE_WRITE_STREAMOUT_BUFFER_UPDATE = 0xC0043400,
	OP_CODE_WRITE_WAIT_MEM_CMD = 0xC0053C00
	//OP_SET_REGISTER_RANGE =,  // can be set to a arbitrary PM4 header(opcode)
};


// sub opcodes
enum OpSubDraw
{
	OP_SUB_BASE_ALLOCATE_FROM_COMMAND_BUFFER = 0x68750000,
	OP_SUB_BASE_MARK_DISPATCH_DRAW_ACB_ADDRESS = 0x68750012,
	OP_SUB_GS_MODE_ENABLE = 0x00000290,
	OP_SUB_GS_MODE_ENABLE_ON_CHIP = 0x00000291,
	OP_SUB_GS_MODE_DISABLE = 0x000002E5,
	OP_SUB_WRITE_GPU_PREFETCH_INTO_L2 = 0x60000000,
	OP_SUB_PREPARE_FLIP_VOID = 0x68750777,
	OP_SUB_PREPARE_FLIP_LABEL = 0x68750778,
	OP_SUB_PREPARE_FLIP_WITH_EOP_INTERRUPT_VOID = 0x68750780,
	OP_SUB_PREPARE_FLIP_WITH_EOP_INTERRUPT_LABEL = 0x68750781,
	OP_SUB_SET_AA_SAMPLE_COUNT = 0x2F8,
	OP_SUB_SET_AA_SAMPLE_MASK1 = 0x30E,
	OP_SUB_SET_AA_SAMPLE_MASK2 = 0x30F,
	OP_SUB_SET_ACTIVE_SHADER_STAGES = 0x2D5,
	OP_SUB_SET_ALPHA_TO_MASK_CONTROL = 0x2DC,
	OP_SUB_SET_BLEND_CONTROL = 0x1E0,  // not real value
	OP_SUB_SET_BORDER_COLOR_TABLE_ADDR = 0x20,
	OP_SUB_SET_CB_CONTROL = 0x202,
	OP_SUB_SET_CLIP_CONTROL = 0x204,
	OP_SUB_SET_CLIP_RECTANGLE_RULE = 0x83,
	OP_SUB_SET_COMPUTE_RESOURCE_MANAGEMENT = 0x2C00,  // not real value
	OP_SUB_SET_COMPUTE_SCRATCH_SIZE = 0x218,
	OP_SUB_SET_COMPUTE_SHADER_CONTROL = 0x215,
	OP_SUB_SET_CONTEXT_REGISTER = 0xA000,  // not real value
	OP_SUB_SET_CONTEXT_REGISTER_RANGE = 0xA000,  // not real value
	OP_SUB_SET_CONTEXT_REGISTER_WITH_INDEX = 0xA000, // not real value
	OP_SUB_SET_DB_COUNT_CONTROL = 0x1,
	OP_SUB_SET_DB_RENDER_CONTROL = 0x0,
	OP_SUB_SET_DEPTH_BOUNDS_RANGE = 0x8,
	OP_SUB_SET_DEPTH_CLEAR_VALUE = 0xB,
	OP_SUB_SET_DEPTH_EQAA_CONTROL = 0x201,
	OP_SUB_SET_DEPTH_RENDER_TARGET_DISABLE = 0x10,
	OP_SUB_SET_DEPTH_STENCIL_CONTROL = 0x200,
	OP_SUB_SET_DEPTH_STENCIL_DISABLE = 0x200,
	OP_SUB_SET_DISPATCH_DRAW_INDEX_DEALLOCATION_MASK = 0x2DD,
	OP_SUB_SET_DRAW_PAYLOAD_CONTROL = 0x2A6,
	OP_SUB_SET_CLIP_RECTANGLE = 0x84, // not real value
	OP_SUB_SET_FOVEATED_WINDOW = 0xEB,
	OP_SUB_SET_RESET_FOVEATED_WINDOW = 0xEB,
	OP_SUB_SET_GENERIC_SCISSOR = 0x90,
	OP_SUB_SET_GRAPHICS_SCRATCH_SIZE = 0x1BA,
	OP_SUB_SET_GS_MODE = 0x290,
	OP_SUB_SET_GS_MODE_DISABLE = 0x2E5,
	OP_SUB_SET_GS_ON_CHIP_CONTROL = 0x291,
	OP_SUB_SET_GUARD_BANDS = 0x2FA,
	OP_SUB_SET_HARDWARE_SCREEN_OFFSET = 0x8D,
	OP_SUB_SET_HTILE_STENCIL0 = 0x2B0,
	OP_SUB_SET_HTILE_STENCIL1 = 0x2B1,
	OP_SUB_SET_INDEX_OFFSET = 0x102,
	OP_SUB_SET_INSTANCE_STEP_RATE = 0x2A8,
	OP_SUB_SET_LINE_WIDTH = 0x282,
	OP_SUB_SET_OBJECT_ID_MODE = 0x20D,
	OP_SUB_SET_PERF_COUNTER_CONTROL_PA = 0x1808,
	OP_SUB_SET_PERFMON_ENABLE = 0xD8,
	OP_SUB_SET_PERSISTENT_REGISTER_RANGE = 0x2C00, // not real value
	OP_SUB_SET_POINT_MIN_MAX = 0x281,
	OP_SUB_SET_POINT_SIZE = 0x280,
	OP_SUB_SET_POLYGON_OFFSET_BACK = 0x2E2,
	OP_SUB_SET_POLYGON_OFFSET_CLAMP = 0x2DF,
	OP_SUB_SET_POLYGON_OFFSET_FRONT = 0x2E0,
	OP_SUB_SET_POLYGON_OFFSET_Z_FORMAT = 0x2DE,
	OP_SUB_SET_PRIMITIVE_ID_ENABLE = 0x2A1,
	OP_SUB_SET_PRIMITIVE_RESET_INDEX = 0x103,
	OP_SUB_SET_PRIMITIVE_RESET_INDEX_ENABLE = 0x2A5,
	OP_SUB_SET_PRIMITIVE_SETUP = 0x205,
	OP_SUB_SET_PRIMITIVE_TYPE_BASE = 0x242,
	OP_SUB_SET_PRIMITIVE_TYPE_NEO = 0x10000242,
	OP_SUB_SET_PS_SHADER_RATE = 0x293,
	OP_SUB_SET_PS_SHADER_SAMPLE_EXCLUSION_MASK = 0x6,
	OP_SUB_SET_PS_SHADER_USAGE = 0x191,
	OP_SUB_SET_RENDER_OVERRIDE2CONTROL = 0x4,
	OP_SUB_SET_RENDER_OVERRIDE_CONTROL = 0x3,
	OP_SUB_SET_RENDER_TARGET_MASK = 0x8E,
	OP_SUB_SET_SCALED_RESOLUTION_GRID = 0xE8,
	OP_SUB_SET_SCAN_MODE_CONTROL = 0x292,
	OP_SUB_SET_SCREEN_SCISSOR = 0xC,
	OP_SUB_SET_SSHARP_IN_USER_DATA = 0x68750006,
	OP_SUB_SET_STENCIL = 0x10C,
	OP_SUB_SET_STENCIL_CLEAR_VALUE = 0xA,
	OP_SUB_SET_STENCIL_OP_CONTROL = 0x10B,
	OP_SUB_SET_STENCIL_SEPARATE = 0x10C,
	OP_SUB_SET_STREAMOUT_BUFFER_DIMENSIONS = 0xA000, // not real value
	OP_SUB_SET_STREAMOUT_MAPPING = 0x2E6,
	OP_SUB_SET_TESSELLATION_DISTRIBUTION_THRESHOLDS = 0x2D4,
	OP_SUB_SET_TEXTURE_GRADIENT_FACTORS = 0x382,
	OP_SUB_SET_TSHARP_IN_USER_DATA = 0x68750005,
	OP_SUB_SETUP_DRAW_OPAQUE_PARAMETERS_0 = 0x2CC,
	OP_SUB_SETUP_DRAW_OPAQUE_PARAMETERS_1 = 0x2CA,
	OP_SUB_SETUP_ES_GS_RING_REGISTERS = 0x2AB,
	OP_SUB_SETUP_GS_VS_RING_REGISTERS = 0x2D7,
	OP_SUB_SET_USER_CLIP_PLANE = 0x16F, // not real value
	OP_SUB_SET_USER_CONFIG_REGISTER = 0xC000, // not real value
	OP_SUB_SET_USER_CONFIG_REGISTER_RANGE = 0xC000, // not real value
	OP_SUB_SET_USER_CONFIG_REGISTER_WITH_INDEX = 0xC000, // not real value
	OP_SUB_SET_USER_DATA = 0x2C00, // not real value
	OP_SUB_SET_VERTEX_QUANTIZATION = 0x2F9,
	OP_SUB_SET_VERTEX_REUSE_ENABLE = 0x2AD,
	OP_SUB_SET_VIEWPORT = 0xB4, // not real value
	OP_SUB_SET_VIEWPORT_SCISSOR = 0x94, // not real value
	OP_SUB_SET_VIEWPORT_TRANSFORM_CONTROL = 0x206,
	OP_SUB_SET_VSHARP_IN_USER_DATA = 0x68750004,
	OP_SUB_SET_VS_SHADER_STREAMOUT_ENABLE = 0x2E5,
	OP_SUB_SET_WINDOW_OFFSET = 0x80,
	OP_SUB_SET_WINDOW_SCISSOR = 0x81,
	OP_SUB_SET_Z_PASS_PREDICATION_DISABLE = 0xFFFFFFF0, // not real value
	OP_SUB_SET_Z_PASS_PREDICATION_ENABLE = 0,
};

//////////////////////////////////////////////////////////////////////////
// self defined
enum OpSubPrivateDispatch : uint8_t
{
	
	// used for OPCODE_BUILD
	OP_SUB_DISPATCH_INITIALIZE_DEFAULT_HARDWARE_STATE = 0x00,
};

enum OpTypeDispatch : uint8_t
{

};

enum OpCodeDispatch : uint32_t
{

};

enum OpSubDispatch
{

};

//////////////////////////////////////////////////////////////////////////
// self defined
enum OpSubPrivateConstant : uint8_t
{

};

enum OpTypeConstant : uint8_t
{

};

enum OpCodeConstant : uint32_t
{

};

enum OpSubConstant
{

};